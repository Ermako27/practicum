/**
 
Напишите функцию, которая умеет удалять из начала и конца строки пробельные или отдельно заданные пользовательские символы.
Удаление пробелов из начала и конца строк — поведение по умолчанию.
Пробел необязательно должен быть передан в качестве аргумента.

trim('  abc  '); // => 'abc'
trim('-_-abc-_-', '_-'); // => 'abc'
trim('\xA0foo'); // "foo" !!! в соответствии с условием удаляем пробел \xA0
trim('\xA0foo', ' '); // " foo" !!! почему-то тут не удаляем по умолчанию пробел \xA0
trim('-_-ab c -_-', '_-'); // ab c !!! а тут снова удаляем пробел по умолчанию

['  foo  ', '  bar  '].map(value => trim(value)); // => ['foo', 'bar']

export default trim;
 */


/**
trim('\xA0foo'); // "foo" !!! в соответствии с условием удаляем пробел \xA0
trim('\xA0foo', ' '); // " foo" !!! почему-то тут не удаляем по умолчанию пробел \xA0. Данный пример конфликтует с частью условия: Удаление пробелов из начала и конца строк — поведение по умолчанию.
trim('-_-ab c -_-', '_-'); // ab c !!! а тут снова удаляем пробел по умолчанию в конце
 */

function trim(string, chars) {
    let str = ' ' + string + ' ';

    if (str && chars === undefined) {
        return string.trim();
    }

    if (!str || !chars) {
        return (string || '');
    }

    const regFirst = new RegExp(` ${chars}`, 'gi');
    const regSecond = new RegExp(`${chars} `, 'gi');

    return str
      .replace(regFirst, '')
      .replace(regSecond, '')
      .trim();
}